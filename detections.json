{"detections": [{"name": "Linux Abnormal Number of SSH Authentications on Distinct Hosts", "author": "Jose Costa", "date": "2024-04-26", "version": 1, "id": "a140ff36-263c-40ad-9bc1-3e8475ef38da", "description": "This use-case aims to detect an abnormal number of SSH authentications on different hosts per user. This behavior could represent an adversary performing lateral movement with a compromised account or abnormal behavior from an insider threat. The detection analyzes the daily count of unique host authentications per user. It compares this count with a statistical upper bound calculated based on the daily number of unique host authentications over the past 30 days, following the three-sigma rule. If the count exceeds a calculated upper bound and the number of data samples is sufficient, it flags the authentication as an outlier. To tune this use-case, the number of past days, the \"daily\" segmentation, and the minimum number of authentications may be adjusted.", "tags": {"name": "Linux Abnormal Number of SSH Authentications on Distinct Hosts", "analytic_story": [], "asset_type": "Server Instance", "cis20": ["CIS 10"], "kill_chain_phases": [], "mitre_attack_id": ["T1021.004"], "nist": ["DE.AE"], "observable": [{"name": "user", "type": "User", "role": ["Victim"]}], "message": "Abnormal Number of SSH Authentication on Distinct Hosts from $user$", "risk_score": 1, "security_domain": "access", "risk_severity": "low", "mitre_attack_enrichments": []}, "search": "| tstats summariesonly=true dc(host) as number_auth from datamodel=Authentication where Authentication.app=ssh earliest=-30d latest=now BY Authentication.user, _time span=24h  | timechart span=24h limit=0 max(number_auth) by Authentication.user | fillnull value=0  | untable _time user count | eval maxtime=now() | eventstats count as num_data_samples max(eval(if(_time >= relative_time(maxtime, \"-24h@h\"), count,null))) as \"count\" avg(eval(if(_time<relative_time(maxtime,\"-24h@h\"),count,null))) as avg stdev(eval(if(_time<relative_time(maxtime,\"-24h@h\"),count,null))) as stdev by \"user\" | eval upperBound=(avg+stdev*3) | eval isOutlier=if((count > upperBound) AND num_data_samples >=7, 1, 0) | where _time >= relative_time(maxtime,\"-24h@h\") AND count > 2 AND isOutlier=1 | `linux_abnormal_number_of_ssh_authentications_on_distinct_hosts_filter`", "how_to_implement": "- Ingest the linux_secure source type from all available instances using CloudWatch.\\ - Use the linux_nix TA to parse the data (including manual adjustments).\\ - Guarantee compliance and mapping with the accelerated Authentication CIM datamodel.\\ - Accurate data must be available within the Authentication data model for the specified historical time period under consideration.", "known_false_positives": "- | Justified Access | Users who have a corresponding JIRA ticket that justifies access to the instances. | - N/A |", "check_references": false, "references": [], "datamodel": ["Authentication"], "macros": [{"name": "linux_abnormal_number_of_ssh_authentications_on_distinct_hosts_filter", "definition": "search *", "description": "Update this macro to limit the output results to filter out false positives."}], "lookups": [], "source": "endpoint", "enabled_by_default": false, "test_groups": []}]}
